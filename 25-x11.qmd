# X11 {#sec-x11}

```{r}
#| results: "asis"
#| echo: false
source("_common.R")
status("drafting", "2023-01-21", section = "X11")  # drafting, polishing, complete
library(seasonal)
```

```{=html}
<!--
-   How to use the X11 spec

-   Case Study: Changing the length of trend and/or seasonal filter

 -->
```
One of the two main methods available in X-13ARIMA-SEATS to extract trend and seasonal components is the X-11 method.
This is a nonparametric procedure that works by passing moving-average filters over the data to extract intended components.

In order to use symmetric moving average filters at the end of the time series (current value), a regARIMA model is used to forecast extend the series.
This RegARIMA model is where users can test for or specify outliers, trading day and moving holiday regressors in their adjustment.
The forecast extended series is then used to filter.

Additionally, X-11 has a built in extreme value procedure included.
This procedure identifies extremes and replaces.
This results in a robust procedure that can automatically choose filters and identify extreme values without much user intervention.
All that needs to be evoked beyond the default `seas()` call is to turn on the X11 spec option.

```{r}
m <- seas(AirPassengers, x11 = "")
summary(m)
```

Before further discussion about the details of the X-11 process, let us see what happened during this modeling run...

When using the x11 spec you can change the length of the filter used for the trend and seasonal components with the `trendma` and `seasonalma` arguments respectively.
Additionally, `sigmalim` will control the amount of extreme value adjustment that is done during the seasonal adjustment.

## Simple Seasonal Adjustment proceedure

In order to better understand the X-11 method, it will be helpful to first perform a basic seasonal adjustment procedure "by-hand".
A basic trend filter could be a simple filter with 13 filter weights all equal to 1/13.
We use these weights to estimate the trend of the `AirPassengers` series.

```{r}
filter_wts = rep(1, 13) / 13
trend_est = stats::filter(x = AirPassengers, filter = filter_wts, sides = 2)
tsbox::ts_plot(cbind(AirPassengers, trend_est))
```

After estimating the trend we now can estimate the seasonal component of the detrended series using a 3x3 seasonal filter that has weights (1,2,3,2,1)/9.

```{r}
seas_3x3 = c(1, 2, 3, 2, 1) / 9
seas_est = stats::filter(AirPassengers - trend_est, seas_3x3, sides = 2)
tsbox::ts_plot(cbind(AirPassengers - trend_est, seas_est))
```

By subtracting this seasonal estimate we have our crude seasonal adjustment.

```{r}
SeasonalAdjustment = AirPassengers - seas_est
tsbox::ts_plot(cbind(AirPassengers, SeasonalAdjustment))
```

We see some obvious flaws this this adjustment.
Visually, there appears to be residual seasonality and the heteroskedastic variance of the series is not reflected in the seasonal component appropriates.
This motivates the X-11 method which is an iterative application of this simple procedure we have just performed.
Each subsequent iteration allows the estimated components to be refined by selecting better filters and handling extreme values and regression effects.
The first adaptation is to consider a transofmation of our series from `AirPassengers` to `log(AirPassengers)`.
Our simple example performed an additive seasonal adjustment.
This transformation will require a move to a multiplicative decomposition.

## Additive and multiplicative (again)

The X-13ARIMA-SEATS development was highly motivated to study economic time series.
As such, the default seasonal adjustment mode is multiplicative due to most seasonal economic time series displaying seasonal fluctuations that increase and decrease along with the level of the time series.

If your series does not have this feature then additive adjustment might be more appropriate.
This can be changed in the `mode` argument of the x11 spec.
For example, `seas(x, x11.mode = 'add')` will perform an additive x11 run.
There exist two other models for decomposition, pseudo-additive and log additive.
These are less common than additive and multiplicative models and are not the focus of this text.
If your series has some extremely small values in certain months (quarters) then pseudo-additive models could be worth further investigation.
It has been observed that when multiplicative seasonal adjustment produces more extreme values in conjunction with small seasonal factors then pseudo-additive adjustment should be explored.
NEED TO SHOW USERS HOW TO VIEW THEIR EXTREME VALUES - D8.B TABLE DESIGNATIONS NEXT TO OBSERVATIONS. A good reference on the subject is Baxter (1994).

## Frequency domain of time series (Optional)

We present the following material as optional reading material.
For those interesting in simply performing seasonal adjustment, an understanding of the frequency domain of a time series, is not manditory.
However, the spectral domain representation will help the interested reader further understand the impact a linear filter has on a time series.
Since both X-11 and SEATS use linear filters this will deepen the users understanding of whichever seasonal adjustmnet proceedure is choosen.

Seasonal adjustment is highly motivated by the study, estimation, and ultimately removal of regular fulutions in a time series.
The words *regular fluctuations* immediately leads us to trigonomic functions sin and cos.
It turns out, there exist two equivilant representations of a time series.
The first, and usually easier for beginners to understand, is the time domain representation.
This is expressing how $X_t$ evolves as time $t$ evolves.
For example, an MA(1) time domiain representation is: $$X_t = w_t + \theta w_{t-1}$$ The second, is a frequency domain representation of a series.
Here, $X_t$ is represented as the sum of trigonometric functions.
More specifically, the spectral density of $X_t$ is the fourier transform of the acf of the series.
$$f_X(\nu) = \sum_{h = - \infty}^{\infty} \gamma(h) e^{-2\pi i \nu h}$$ For example, the spectral density of an MA(1) is: $$f_X(\nu) = \sigma^2 \left( 1 + \theta^2 + 2\theta\cos(2\pi\nu) \right)$$ The important concept here is to understand that these representations are equivalent; meaning they contain the same information about a time series, such as encoding the acf function.

::: callout-tip
## Where does the term \`\`White Noise'' come from?

The spectral density of an uncorrelated sequence with variance $\sigma^2$ is simply $f(\nu) = \sigma^2$.
Notice this is not a function of any frequencies but just a constant for any $\nu$.
Hence, it is a stochastic process that equally weight all frequencies in the spectrum.
This is precisely where the names white noise comes from as white light has the same property of reflecting all color bands equally, combining to produce white light.
:::

Now that we know we can express a time series either in the time domain or as a sum of sin and cosine curves, we get to the important part for seasonal adjustment - how does a linear filter effect the input series?
Assume we want to pass a moving-average linear filter over our data $X_t$ with weights $\ldots, w_{-2}, w_{-1}, w_{0}, w_{1}, w_{2}, \ldots$.
Assume the output of the linear filter will be $Y_t$ such that $$Y_t = \sum_{j = -\infty}^{\infty} w_j X_{t+j} = 
\ldots + w_{-2}X_{t-2} + w_{-1}X_{t-1} +  w_{0}X_{t} + w_{1}X_{t+1} + w_{2}X_{t+2} + \ldots$$ This type of linear filter can be expressed as a linear operator in terms of the backshift operator $B$ , where $BX_t = X_{t-1}$ and $B^{-1}X_t = X_{t+1}$.
$$W(B) = \ldots + w_{-2}B^2 + w_{-1}B +  w_{0} + w_{1}B^{-1} + w_{2}B^{-2} + \ldots$$ and hence $Y_t = W(B)X_t$.
We can now express the spectral density of $Y_t$ in terms of the input spectral density $X_t$.
$$f_Y(\nu) = \underbrace{\lvert W(e^{2\pi i \nu}) \rvert^2}_{\text{Square Gain Function}} f_X(\nu)$$.
There is some mathematical machinery needed when understanding exactly what the square-gain function, $\lvert W(e^{2\pi i \nu}) \rvert^2$, is.
However, for the sake of this text we just know that it tells us exactly the frequencies of $X_t$ that amplified in the output $Y_t$ as well as the frequencies of $X_t$ that will be annihilated (when the square-gain function equals 0).

## X-11 Moving average filters

We introduce the moving average filters and subsequently plot the filter weights along with the values of the squared gain function.
The X11 spec also allows users to control the length of the trend and seasonal moving average filters used during the adjustment.
Generally speaking, longer filters imply a more stable seasonal component and shorter filters a more changing seasonal pattern.
Of course, a longer filter will use more data for the calculation of components at each time point.
This is an important observation and understanding it might help a user decide on a short or long filter.
Since longer filters use more data there tend to be smaller revisions when a new data point is added.
However, there will be revisions to data values further back.

A shorter filter is just the opposite, they tend to produce larger revisions but they do not extend as far back into the series.
If a filter is not choosen by the user then automatic filter selection is used.
To understand the length of a filter let's look at the (finite) number of choice available in during an x11 adjustment.
@tbl-x11-filters shows the different filters available for the seasonal component and the trend component.

| Value        | Description                                                                                                                                                                                                                     |
|------------|------------------------------------------------------------|
| `s3x1`       | 3Ã—1 moving average                                                                                                                                                                                                              |
| `s3x3`       | 3Ã—3 moving average                                                                                                                                                                                                              |
| `s3x5`       | 3Ã—5 moving average                                                                                                                                                                                                              |
| `s3x9`       | 3Ã—9 moving average                                                                                                                                                                                                              |
| `s3x15`      | 3Ã—15 moving average                                                                                                                                                                                                             |
| `stable`     | Stable seasonal filter. A single seasonal factor for each calendar month or quarter is generated by calculating the simple average of all the values for each month or quarter (taken after detrending and outlier adjustment). |
| `x11default` | A 3Ã—3 moving average is used to calculate the initial seasonal factors in each iteration, and a 3Ã—5 moving average to calculate the final seasonal factors.                                                                     |

: Filters available in X11 {#tbl-x11-filters tbl-colwidths="\[30,70\]"}

```{r, echo=FALSE}
# Function to find seasonal filter weight by passing impuse through
find_seasonal_PxQ_filter_wts = function(P, Q) {
  v = rep(0, 100)
  v[50] = 1
  v2 = filter(v, rep(1 / Q, Q), sides = 2)
  v3 = filter(v2, rep(1 / P, P), sides = 2)
  wts = v3[v3 > 0 & !is.na(v3)]
  wts
}
```

```{r, echo=FALSE}
# 3 x 3 seasonal filter wts 
w = find_seasonal_PxQ_filter_wts(3, 3)
w_len = (length(w) - 1) / 2
plot((-w_len):(w_len), w, type = "b", ylim = c(0, max(w)), xlab = "time lag", ylab = "filter weight", main = "3x3 Seasonal Filter wts")
abline(h = 0, lty = 'dotted')
```

```{r, echo=FALSE}
# 3 x 5 seasonal filter wts 
w = find_seasonal_PxQ_filter_wts(3, 5)
w_len = (length(w) - 1) / 2
plot((-w_len):(w_len), w, type = "b", ylim = c(0, max(w)), xlab = "time lag", ylab = "filter weight", main = "3x5 Seasonal Filter wts")
abline(h = 0, lty = 'dotted')
```

```{r, echo=FALSE}
# 3 x 9 seasonal filter wts 
w = find_seasonal_PxQ_filter_wts(3, 9)
w_len = (length(w) - 1) / 2
plot((-w_len):(w_len), w, type = "b", ylim = c(0, max(w)), xlab = "time lag", ylab = "filter weight", main = "3x9 Seasonal Filter wts")
abline(h = 0, lty = 'dotted')
```

```{r, echo=FALSE}
# 3 x 15 seasonal filter wts 
w = find_seasonal_PxQ_filter_wts(3, 15)
w_len = (length(w) - 1) / 2
plot((-w_len):(w_len), w, type = "b", ylim = c(0, max(w)), xlab = "time lag", ylab = "filter weight", main = "3x15 Seasonal Filter wts")
abline(h = 0, lty = 'dotted')
```

## Extreme value

The X11 method is sensitive to outliers. Beyond the specified regressors (AOs, level shifts, temporary changes, etc), an X11 adjustment will replace extreme values after the initial crude trend estimation occurs in the first iteration of the X11 method. 

The replacement proceedure looks as follows:


```{mermaid}
%%| label: fig-spec-interaction
%%| fig-width: 9
%%| fig-cap: |
%%|   Interactions between X-13 specs.
flowchart LR
    A(  Estimate standard deviation <br> of irregular, s  )-->B(Compare SI-ration to <br> multiples of s)
    B-->C(SI < 1.5 * s)
    B-->D(1.5 * s < SI < 2.5 * s)
    B-->E(SI > 2.5 * s)
    C --> F(SI unchanged)
    D --> G(SI linearly weighted)
    E --> H(SI fully weighted)
```

::: callout-warning
### SI ratio / SI difference

In a multiplicative adjustment, the detrended series is reffered to the SI ratio. 
It is an estimate of the seasonal component. The SI ratio is used to identify extreme values during the initial and intermediate steps of the X-11 method. 

:::


::: callout-warning
## Related concept: Outlier

FIXME: explain how this is related to transform.
:::

## Case study

```{r}

tsbox::ts_plot(
  s3x1 = predict(seas(AirPassengers, x11.seasonalma = "s3x1")),
  s3x15 = predict(seas(AirPassengers, x11.seasonalma = "s3x15"))
)




```

## Points to include in Chapter

* Level shifts are included with the trend component while AOs and extreme values are included in the irregular.
* 
